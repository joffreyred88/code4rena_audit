/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MathTest, MathTestInterface } from "../MathTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "divUp",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
    ],
    name: "shiftRightUp",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806359c626761461003b578063cbe8623f14610060575b600080fd5b61004e610049366004610102565b610073565b60405190815260200160405180910390f35b61004e61006e3660046100e1565b610088565b600061007f8383610094565b90505b92915050565b600061007f83836100b7565b60ff811682811c9081901b831461008257806100af8161014a565b949350505050565b60006100c38284610136565b905060006100d18385610171565b111561008257806100af8161014a565b600080604083850312156100f3578182fd5b50508035926020909101359150565b60008060408385031215610114578182fd5b82359150602083013560ff8116811461012b578182fd5b809150509250929050565b60008261014557610145610185565b500490565b600060001982141561016a57634e487b7160e01b81526011600452602481fd5b5060010190565b60008261018057610180610185565b500690565b634e487b7160e01b600052601260045260246000fdfea26469706673582212208eba1c31589407c9bc3d9ec3cb84d6042452cec9891c4a1a3c53cccadeacdc1364736f6c63430008040033";

export class MathTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MathTest> {
    return super.deploy(overrides || {}) as Promise<MathTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MathTest {
    return super.attach(address) as MathTest;
  }
  connect(signer: Signer): MathTest__factory {
    return super.connect(signer) as MathTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MathTestInterface {
    return new utils.Interface(_abi) as MathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MathTest {
    return new Contract(address, _abi, signerOrProvider) as MathTest;
  }
}
