/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LendMathTest, LendMathTestInterface } from "../LendMathTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "asset",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "collateral",
                type: "uint128",
              },
            ],
            internalType: "struct IPair.Tokens",
            name: "reserves",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalLiquidity",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "bond",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "insurance",
                type: "uint128",
              },
            ],
            internalType: "struct IPair.Claims",
            name: "totalClaims",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "totalDebtCreated",
            type: "uint120",
          },
          {
            internalType: "uint112",
            name: "x",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "y",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "z",
            type: "uint112",
          },
        ],
        internalType: "struct IPair.State",
        name: "state",
        type: "tuple",
      },
      {
        internalType: "uint112",
        name: "xIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "yDecrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "zDecrease",
        type: "uint112",
      },
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "xIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "yDecrease",
        type: "uint112",
      },
    ],
    name: "getBond",
    outputs: [
      {
        internalType: "uint128",
        name: "bondOut",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "asset",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "collateral",
                type: "uint128",
              },
            ],
            internalType: "struct IPair.Tokens",
            name: "reserves",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalLiquidity",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "bond",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "insurance",
                type: "uint128",
              },
            ],
            internalType: "struct IPair.Claims",
            name: "totalClaims",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "totalDebtCreated",
            type: "uint120",
          },
          {
            internalType: "uint112",
            name: "x",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "y",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "z",
            type: "uint112",
          },
        ],
        internalType: "struct IPair.State",
        name: "state",
        type: "tuple",
      },
      {
        internalType: "uint112",
        name: "xIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "zDecrease",
        type: "uint112",
      },
    ],
    name: "getInsurance",
    outputs: [
      {
        internalType: "uint128",
        name: "insuranceOut",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610808806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302963a81146100465780638a277d801461006e578063ab01595914610099575b600080fd5b610059610054366004610578565b6100ac565b60405190151581526020015b60405180910390f35b61008161007c3660046105ec565b6100c7565b6040516001600160801b039091168152602001610065565b6100816100a736600461063c565b6100de565b60006100bb86868686866100f3565b50600195945050505050565b60006100d5858585856101f7565b95945050505050565b60006100eb84848461028d565b949350505050565b600061010661ffff8316620100006106d9565b62ffffff169050600085876080015161011f91906106ae565b905060006101328860a0015187856102d2565b905060006101458960c0015187866102d2565b905061015389848484610306565b60a08901516001600160701b03808a169161016f91168261075e565b600c1b90506001600160701b0384166101916001600160801b0387168261075e565b905061019d818361070f565b915081896001600160701b031610156101ea5760405162461bcd60e51b81526004016101e1906020808252600490820152632299981960e11b604082015260600190565b60405180910390fd5b5050505050505050505050565b60008461020442826107a5565b90506102196001600160701b0384168261075e565b60c086015160199190911c91506001600160701b039081169061023e9086168261075e565b60808701519091506001600160701b039081169061025e908716826106f7565b905061026a818361070f565b915061027682846106f7565b925061028183610402565b98975050505050505050565b60008361029a42826107a5565b90506102af6001600160701b0384168261075e565b60201c90506102c76001600160701b038516826106f7565b90506100d581610402565b6fffffffffffffffffffffffffffff0000601084901b166102fc6001600160701b0384168361072f565b6100eb908261077d565b6000806103326001600160701b03861661032c6001600160801b0380871690881661075e565b9061041d565b9150915060008061037a88608001516001600160701b031660208a60c001516001600160701b03168b60a001516001600160701b0316610372919061075e565b901b9061041d565b91509150808310156103b75760405162461bcd60e51b81526004016101e1906020808252600490820152634533303160e01b604082015260600190565b808314156103f857818410156103f85760405162461bcd60e51b81526004016101e1906020808252600490820152634533303160e01b604082015260600190565b5050505050505050565b806001600160801b038116811461041857600080fd5b919050565b6000806000198385098385029250828110838203039150509250929050565b60006040828403121561044d578081fd5b6040516040810181811067ffffffffffffffff8211171561047c57634e487b7160e01b83526041600452602483fd5b60405290508061048b83610561565b815261049960208401610561565b60208201525092915050565b600061012082840312156104b7578081fd5b6104bf610677565b90506104cb838361043c565b8152604082013560208201526104e4836060840161043c565b604082015260a08201356effffffffffffffffffffffffffffff8116811461050b57600080fd5b606082015261051c60c0830161054a565b608082015261052d60e0830161054a565b60a082015261053f610100830161054a565b60c082015292915050565b80356001600160701b038116811461041857600080fd5b80356001600160801b038116811461041857600080fd5b60008060008060006101a08688031215610590578081fd5b61059a87876104a5565b94506105a9610120870161054a565b93506105b8610140870161054a565b92506105c7610160870161054a565b915061018086013561ffff811681146105de578182fd5b809150509295509295909350565b6000806000806101808587031215610602578384fd5b8435935061061386602087016104a5565b9250610622610140860161054a565b9150610631610160860161054a565b905092959194509250565b600080600060608486031215610650578283fd5b833592506106606020850161054a565b915061066e6040850161054a565b90509250925092565b60405160e0810167ffffffffffffffff811182821017156106a857634e487b7160e01b600052604160045260246000fd5b60405290565b60006001600160701b038083168185168083038211156106d0576106d06107bc565b01949350505050565b600062ffffff8083168185168083038211156106d0576106d06107bc565b6000821982111561070a5761070a6107bc565b500190565b60008261072a57634e487b7160e01b81526012600452602481fd5b500490565b60006001600160801b0380831681851681830481118215151615610755576107556107bc565b02949350505050565b6000816000190483118215151615610778576107786107bc565b500290565b60006001600160801b038381169083168181101561079d5761079d6107bc565b039392505050565b6000828210156107b7576107b76107bc565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220af44e1d485feac2234068147a2360f4c840229e8d270b554665b3ab02de0b64364736f6c63430008040033";

export class LendMathTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LendMathTest> {
    return super.deploy(overrides || {}) as Promise<LendMathTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LendMathTest {
    return super.attach(address) as LendMathTest;
  }
  connect(signer: Signer): LendMathTest__factory {
    return super.connect(signer) as LendMathTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendMathTestInterface {
    return new utils.Interface(_abi) as LendMathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendMathTest {
    return new Contract(address, _abi, signerOrProvider) as LendMathTest;
  }
}
