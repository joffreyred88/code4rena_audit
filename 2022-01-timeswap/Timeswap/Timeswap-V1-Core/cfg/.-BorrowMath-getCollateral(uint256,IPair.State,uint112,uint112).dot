digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
_collateralIn = maturity

IRs:
_collateralIn(uint256) := maturity(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_collateralIn -= block.timestamp

IRs:
_collateralIn(uint256) = _collateralIn (c)- block.timestamp"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_collateralIn *= zIncrease

IRs:
_collateralIn(uint256) = _collateralIn (c)* zIncrease"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
_collateralIn = _collateralIn.shiftRightUp(25)

IRs:
TMP_338(uint256) = LIBRARY_CALL, dest:Math, function:Math.shiftRightUp(uint256,uint8), arguments:['_collateralIn', '25'] 
_collateralIn(uint256) := TMP_338(uint256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
minimum = state.z

IRs:
REF_321(uint112) -> state.z
minimum(uint256) := REF_321(uint112)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
minimum *= xDecrease

IRs:
minimum(uint256) = minimum (c)* xDecrease"];
6->7;
7[label="Node Type: NEW VARIABLE 7

EXPRESSION:
denominator = state.x

IRs:
REF_322(uint112) -> state.x
denominator(uint256) := REF_322(uint112)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
denominator -= xDecrease

IRs:
denominator(uint256) = denominator (c)- xDecrease"];
8->9;
9[label="Node Type: EXPRESSION 9

EXPRESSION:
minimum = minimum.divUp(denominator)

IRs:
TMP_339(uint256) = LIBRARY_CALL, dest:Math, function:Math.divUp(uint256,uint256), arguments:['minimum', 'denominator'] 
minimum(uint256) := TMP_339(uint256)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
_collateralIn += minimum

IRs:
_collateralIn(uint256) = _collateralIn (c)+ minimum"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
collateralIn = _collateralIn.toUint112()

IRs:
TMP_340(uint112) = LIBRARY_CALL, dest:SafeCast, function:SafeCast.toUint112(uint256), arguments:['_collateralIn'] 
collateralIn(uint112) := TMP_340(uint112)"];
}
