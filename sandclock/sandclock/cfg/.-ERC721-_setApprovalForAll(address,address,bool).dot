digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(owner != operator,ERC721: approve to caller)

IRs:
TMP_184(bool) = owner != operator
TMP_185(None) = SOLIDITY_CALL require(bool,string)(TMP_184,ERC721: approve to caller)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_operatorApprovals[owner][operator] = approved

IRs:
REF_63(mapping(address => bool)) -> _operatorApprovals[owner]
REF_64(bool) -> REF_63[operator]
REF_64 (->_operatorApprovals) := approved(bool)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
ApprovalForAll(owner,operator,approved)

IRs:
Emit ApprovalForAll(owner.operator.approved)"];
}
