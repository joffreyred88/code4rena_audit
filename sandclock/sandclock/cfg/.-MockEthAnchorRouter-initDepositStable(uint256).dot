digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(pendingOperator != address(0))

IRs:
TMP_601 = CONVERT 0 to address
TMP_602(bool) = pendingOperator != TMP_601
TMP_603(None) = SOLIDITY_CALL require(bool)(TMP_602)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
ustToken.safeTransferFrom(msg.sender,address(this),_amount)

IRs:
TMP_604 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['ustToken', 'msg.sender', 'TMP_604', '_amount'] "];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
depositOperations[pendingOperator] = _amount

IRs:
REF_193(uint256) -> depositOperations[pendingOperator]
REF_193 (->depositOperations) := _amount(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
operator = pendingOperator

IRs:
operator(address) := pendingOperator(address)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
pendingOperator = address(0)

IRs:
TMP_606 = CONVERT 0 to address
pendingOperator(address) := TMP_606(address)"];
}
