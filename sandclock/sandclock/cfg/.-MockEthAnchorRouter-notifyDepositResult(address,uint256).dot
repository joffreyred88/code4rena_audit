digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(depositOperations[_operation] > 0)

IRs:
REF_194(uint256) -> depositOperations[_operation]
TMP_607(bool) = REF_194 > 0
TMP_608(None) = SOLIDITY_CALL require(bool)(TMP_607)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
aUstToken.safeTransferFrom(msg.sender,address(this),_amount)

IRs:
TMP_609 = CONVERT this to address
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['aUstToken', 'msg.sender', 'TMP_609', '_amount'] "];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
depositOperations[_operation] = 0

IRs:
REF_196(uint256) -> depositOperations[_operation]
REF_196 (->depositOperations) := 0(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
depositFinishResults[_operation] = _amount

IRs:
REF_197(uint256) -> depositFinishResults[_operation]
REF_197 (->depositFinishResults) := _amount(uint256)"];
}
