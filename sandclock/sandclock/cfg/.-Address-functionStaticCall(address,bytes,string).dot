digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(isContract(target),Address: static call to non-contract)

IRs:
TMP_212(bool) = INTERNAL_CALL, Address.isContract(address)(target)
TMP_213(None) = SOLIDITY_CALL require(bool,string)(TMP_212,Address: static call to non-contract)"];
1->2;
2[label="Node Type: NEW VARIABLE 2
"];
2->3;
3[label="Node Type: NEW VARIABLE 3
"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
(success,returndata) = target.staticcall(data)

IRs:
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:target, function:staticcall, arguments:['data']  
success(bool)= UNPACK TUPLE_2 index: 0 
returndata(bytes)= UNPACK TUPLE_2 index: 1 "];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
verifyCallResult(success,returndata,errorMessage)

IRs:
TMP_214(bytes) = INTERNAL_CALL, Address.verifyCallResult(bool,bytes,string)(success,returndata,errorMessage)
RETURN TMP_214"];
}
