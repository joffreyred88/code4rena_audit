digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
value = counter._value

IRs:
REF_80(uint256) -> counter._value
value(uint256) := REF_80(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(value > 0,Counter: decrement overflow)

IRs:
TMP_224(bool) = value > 0
TMP_225(None) = SOLIDITY_CALL require(bool,string)(TMP_224,Counter: decrement overflow)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
counter._value = value - 1

IRs:
REF_81(uint256) -> counter._value
TMP_226(uint256) = value - 1
REF_81 (->counter) := TMP_226(uint256)"];
}
