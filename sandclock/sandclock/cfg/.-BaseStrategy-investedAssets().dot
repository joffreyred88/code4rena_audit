digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
underlyingBalance = _getUnderlyingBalance() + pendingDeposits

IRs:
TMP_1048(uint256) = INTERNAL_CALL, BaseStrategy._getUnderlyingBalance()()
TMP_1049(uint256) = TMP_1048 (c)+ pendingDeposits
underlyingBalance(uint256) := TMP_1049(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
aUstBalance = _getAUstBalance() + pendingRedeems

IRs:
TMP_1050(uint256) = INTERNAL_CALL, BaseStrategy._getAUstBalance()()
TMP_1051(uint256) = TMP_1050 (c)+ pendingRedeems
aUstBalance(uint256) := TMP_1051(uint256)"];
2->3;
3[label="Node Type: RETURN 3

EXPRESSION:
underlyingBalance + ((exchangeRateFeeder.exchangeRateOf(address(aUstToken),true) * aUstBalance) / 1e18)

IRs:
TMP_1052 = CONVERT aUstToken to address
TMP_1053(uint256) = HIGH_LEVEL_CALL, dest:exchangeRateFeeder(IExchangeRateFeeder), function:exchangeRateOf, arguments:['TMP_1052', 'True']  
TMP_1054(uint256) = TMP_1053 (c)* aUstBalance
TMP_1055(uint256) = TMP_1054 (c)/ 1000000000000000000
TMP_1056(uint256) = underlyingBalance (c)+ TMP_1055
RETURN TMP_1056"];
}
