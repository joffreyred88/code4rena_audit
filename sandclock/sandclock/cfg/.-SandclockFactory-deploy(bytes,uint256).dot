digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
addr = create2(uint256,uint256,uint256,uint256)(0,code + 0x20,mload(uint256)(code),salt)

IRs:
TMP_273(bytes) = code + 32
TMP_274(uint256) = SOLIDITY_CALL mload(uint256)(code)
TMP_275(uint256) = SOLIDITY_CALL create2(uint256,uint256,uint256,uint256)(0,TMP_273,TMP_274,salt)
addr(address) := TMP_275(uint256)"];
3->4;
4[label="Node Type: IF 4

EXPRESSION:
! extcodesize(uint256)(addr)

IRs:
REF_94 -> CODESIZE addr
TMP_276 = ! REF_94 
CONDITION TMP_276"];
4->6[label="True"];
4->5[label="False"];
5[label="Node Type: END_IF 5
"];
5->7;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
revert(uint256,uint256)(0,0)

IRs:
TMP_277(None) = SOLIDITY_CALL revert(uint256,uint256)(0,0)"];
6->5;
7[label="Node Type: RETURN 7

EXPRESSION:
addr

IRs:
RETURN addr"];
}
